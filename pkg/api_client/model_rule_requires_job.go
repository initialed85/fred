/*
Djangolang

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_client

import (
	"encoding/json"
	"time"
)

// checks if the RuleRequiresJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleRequiresJob{}

// RuleRequiresJob struct for RuleRequiresJob
type RuleRequiresJob struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	Id *string `json:"id,omitempty"`
	JobId *string `json:"job_id,omitempty"`
	JobIdObject *Job `json:"job_id_object,omitempty"`
	RuleId *string `json:"rule_id,omitempty"`
	RuleIdObject *Rule `json:"rule_id_object,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewRuleRequiresJob instantiates a new RuleRequiresJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleRequiresJob() *RuleRequiresJob {
	this := RuleRequiresJob{}
	return &this
}

// NewRuleRequiresJobWithDefaults instantiates a new RuleRequiresJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleRequiresJobWithDefaults() *RuleRequiresJob {
	this := RuleRequiresJob{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RuleRequiresJob) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRequiresJob) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RuleRequiresJob) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *RuleRequiresJob) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *RuleRequiresJob) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRequiresJob) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *RuleRequiresJob) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *RuleRequiresJob) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RuleRequiresJob) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRequiresJob) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RuleRequiresJob) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RuleRequiresJob) SetId(v string) {
	o.Id = &v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *RuleRequiresJob) GetJobId() string {
	if o == nil || IsNil(o.JobId) {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRequiresJob) GetJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *RuleRequiresJob) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *RuleRequiresJob) SetJobId(v string) {
	o.JobId = &v
}

// GetJobIdObject returns the JobIdObject field value if set, zero value otherwise.
func (o *RuleRequiresJob) GetJobIdObject() Job {
	if o == nil || IsNil(o.JobIdObject) {
		var ret Job
		return ret
	}
	return *o.JobIdObject
}

// GetJobIdObjectOk returns a tuple with the JobIdObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRequiresJob) GetJobIdObjectOk() (*Job, bool) {
	if o == nil || IsNil(o.JobIdObject) {
		return nil, false
	}
	return o.JobIdObject, true
}

// HasJobIdObject returns a boolean if a field has been set.
func (o *RuleRequiresJob) HasJobIdObject() bool {
	if o != nil && !IsNil(o.JobIdObject) {
		return true
	}

	return false
}

// SetJobIdObject gets a reference to the given Job and assigns it to the JobIdObject field.
func (o *RuleRequiresJob) SetJobIdObject(v Job) {
	o.JobIdObject = &v
}

// GetRuleId returns the RuleId field value if set, zero value otherwise.
func (o *RuleRequiresJob) GetRuleId() string {
	if o == nil || IsNil(o.RuleId) {
		var ret string
		return ret
	}
	return *o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRequiresJob) GetRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RuleId) {
		return nil, false
	}
	return o.RuleId, true
}

// HasRuleId returns a boolean if a field has been set.
func (o *RuleRequiresJob) HasRuleId() bool {
	if o != nil && !IsNil(o.RuleId) {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given string and assigns it to the RuleId field.
func (o *RuleRequiresJob) SetRuleId(v string) {
	o.RuleId = &v
}

// GetRuleIdObject returns the RuleIdObject field value if set, zero value otherwise.
func (o *RuleRequiresJob) GetRuleIdObject() Rule {
	if o == nil || IsNil(o.RuleIdObject) {
		var ret Rule
		return ret
	}
	return *o.RuleIdObject
}

// GetRuleIdObjectOk returns a tuple with the RuleIdObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRequiresJob) GetRuleIdObjectOk() (*Rule, bool) {
	if o == nil || IsNil(o.RuleIdObject) {
		return nil, false
	}
	return o.RuleIdObject, true
}

// HasRuleIdObject returns a boolean if a field has been set.
func (o *RuleRequiresJob) HasRuleIdObject() bool {
	if o != nil && !IsNil(o.RuleIdObject) {
		return true
	}

	return false
}

// SetRuleIdObject gets a reference to the given Rule and assigns it to the RuleIdObject field.
func (o *RuleRequiresJob) SetRuleIdObject(v Rule) {
	o.RuleIdObject = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *RuleRequiresJob) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRequiresJob) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *RuleRequiresJob) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *RuleRequiresJob) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o RuleRequiresJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleRequiresJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.JobId) {
		toSerialize["job_id"] = o.JobId
	}
	if !IsNil(o.JobIdObject) {
		toSerialize["job_id_object"] = o.JobIdObject
	}
	if !IsNil(o.RuleId) {
		toSerialize["rule_id"] = o.RuleId
	}
	if !IsNil(o.RuleIdObject) {
		toSerialize["rule_id_object"] = o.RuleIdObject
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableRuleRequiresJob struct {
	value *RuleRequiresJob
	isSet bool
}

func (v NullableRuleRequiresJob) Get() *RuleRequiresJob {
	return v.value
}

func (v *NullableRuleRequiresJob) Set(val *RuleRequiresJob) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleRequiresJob) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleRequiresJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleRequiresJob(val *RuleRequiresJob) *NullableRuleRequiresJob {
	return &NullableRuleRequiresJob{value: val, isSet: true}
}

func (v NullableRuleRequiresJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleRequiresJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


