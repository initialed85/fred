{
  "openapi": "3.0.0",
  "info": {
    "title": "Djangolang",
    "version": "1.0"
  },
  "components": {
    "schemas": {
      "ArrayOfNullableChange": {
        "type": "array",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/Change",
          "nullable": true
        }
      },
      "ArrayOfNullableExecution": {
        "type": "array",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/Execution",
          "nullable": true
        }
      },
      "ArrayOfNullableJob": {
        "type": "array",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/Job",
          "nullable": true
        }
      },
      "ArrayOfNullableOutput": {
        "type": "array",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/Output",
          "nullable": true
        }
      },
      "ArrayOfNullableRepository": {
        "type": "array",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/Repository",
          "nullable": true
        }
      },
      "ArrayOfNullableRule": {
        "type": "array",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/Rule",
          "nullable": true
        }
      },
      "ArrayOfNullableRuleRequiresJob": {
        "type": "array",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/RuleRequiresJob",
          "nullable": true
        }
      },
      "ArrayOfNullableTask": {
        "type": "array",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/Task",
          "nullable": true
        }
      },
      "ArrayOfNullableTrigger": {
        "type": "array",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/Trigger",
          "nullable": true
        }
      },
      "ArrayOfNullableTriggerHasExecution": {
        "type": "array",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/TriggerHasExecution",
          "nullable": true
        }
      },
      "ArrayOfString": {
        "type": "array",
        "nullable": true,
        "items": {
          "type": "string"
        }
      },
      "Change": {
        "type": "object",
        "properties": {
          "authored_at": {
            "type": "string",
            "format": "date-time"
          },
          "authored_by": {
            "type": "string"
          },
          "branch_name": {
            "type": "string"
          },
          "commit_hash": {
            "type": "string"
          },
          "committed_at": {
            "type": "string",
            "format": "date-time"
          },
          "committed_by": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "message": {
            "type": "string"
          },
          "referenced_by_trigger_change_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Trigger",
              "nullable": true
            }
          },
          "repository_id": {
            "type": "string",
            "format": "uuid"
          },
          "repository_id_object": {
            "$ref": "#/components/schemas/Repository",
            "nullable": true
          },
          "trigger_produced_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ClaimRequest": {
        "type": "object",
        "properties": {
          "claim_duration_seconds": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Execution": {
        "type": "object",
        "properties": {
          "build_output_id": {
            "type": "string",
            "format": "uuid"
          },
          "build_output_id_object": {
            "$ref": "#/components/schemas/Output",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deploy_output_id": {
            "type": "string",
            "format": "uuid"
          },
          "deploy_output_id_object": {
            "$ref": "#/components/schemas/Output",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "job_id": {
            "type": "string",
            "format": "uuid"
          },
          "job_id_object": {
            "$ref": "#/components/schemas/Job",
            "nullable": true
          },
          "publish_output_id": {
            "type": "string",
            "format": "uuid"
          },
          "publish_output_id_object": {
            "$ref": "#/components/schemas/Output",
            "nullable": true
          },
          "referenced_by_trigger_has_execution_execution_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TriggerHasExecution",
              "nullable": true
            }
          },
          "status": {
            "type": "string"
          },
          "test_output_id": {
            "type": "string",
            "format": "uuid"
          },
          "test_output_id_object": {
            "$ref": "#/components/schemas/Output",
            "nullable": true
          },
          "trigger_id": {
            "type": "string",
            "format": "uuid"
          },
          "trigger_id_object": {
            "$ref": "#/components/schemas/Trigger",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "validate_output_id": {
            "type": "string",
            "format": "uuid"
          },
          "validate_output_id_object": {
            "$ref": "#/components/schemas/Output",
            "nullable": true
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "build_task_id": {
            "type": "string",
            "format": "uuid"
          },
          "build_task_id_object": {
            "$ref": "#/components/schemas/Task",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deploy_task_id": {
            "type": "string",
            "format": "uuid"
          },
          "deploy_task_id_object": {
            "$ref": "#/components/schemas/Task",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "job_executor_claimed_until": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "publish_task_id": {
            "type": "string",
            "format": "uuid"
          },
          "publish_task_id_object": {
            "$ref": "#/components/schemas/Task",
            "nullable": true
          },
          "referenced_by_execution_job_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Execution",
              "nullable": true
            }
          },
          "referenced_by_rule_requires_job_job_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RuleRequiresJob",
              "nullable": true
            }
          },
          "rule_id": {
            "type": "string",
            "format": "uuid"
          },
          "rule_id_object": {
            "$ref": "#/components/schemas/Rule",
            "nullable": true
          },
          "test_task_id": {
            "type": "string",
            "format": "uuid"
          },
          "test_task_id_object": {
            "$ref": "#/components/schemas/Task",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "validate_task_id": {
            "type": "string",
            "format": "uuid"
          },
          "validate_task_id_object": {
            "$ref": "#/components/schemas/Task",
            "nullable": true
          }
        }
      },
      "NullableChange": {
        "$ref": "#/components/schemas/Change",
        "nullable": true
      },
      "NullableExecution": {
        "$ref": "#/components/schemas/Execution",
        "nullable": true
      },
      "NullableJob": {
        "$ref": "#/components/schemas/Job",
        "nullable": true
      },
      "NullableOutput": {
        "$ref": "#/components/schemas/Output",
        "nullable": true
      },
      "NullableRepository": {
        "$ref": "#/components/schemas/Repository",
        "nullable": true
      },
      "NullableRule": {
        "$ref": "#/components/schemas/Rule",
        "nullable": true
      },
      "NullableRuleRequiresJob": {
        "$ref": "#/components/schemas/RuleRequiresJob",
        "nullable": true
      },
      "NullableTask": {
        "$ref": "#/components/schemas/Task",
        "nullable": true
      },
      "NullableTrigger": {
        "$ref": "#/components/schemas/Trigger",
        "nullable": true
      },
      "NullableTriggerHasExecution": {
        "$ref": "#/components/schemas/TriggerHasExecution",
        "nullable": true
      },
      "Output": {
        "type": "object",
        "properties": {
          "buffer": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "type": "string"
          },
          "exit_status": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "referenced_by_execution_build_output_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Execution",
              "nullable": true
            }
          },
          "referenced_by_execution_deploy_output_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Execution",
              "nullable": true
            }
          },
          "referenced_by_execution_publish_output_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Execution",
              "nullable": true
            }
          },
          "referenced_by_execution_test_output_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Execution",
              "nullable": true
            }
          },
          "referenced_by_execution_validate_output_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Execution",
              "nullable": true
            }
          },
          "status": {
            "type": "string"
          },
          "task_id": {
            "type": "string",
            "format": "uuid"
          },
          "task_id_object": {
            "$ref": "#/components/schemas/Task",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Repository": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "last_synced": {
            "type": "string",
            "format": "date-time"
          },
          "password": {
            "type": "string"
          },
          "referenced_by_change_repository_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Change",
              "nullable": true
            }
          },
          "referenced_by_rule_repository_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Rule",
              "nullable": true
            }
          },
          "ssh_key": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "ResponseWithGenericOfChange": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Change",
              "nullable": true
            }
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseWithGenericOfExecution": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Execution",
              "nullable": true
            }
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseWithGenericOfJob": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Job",
              "nullable": true
            }
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseWithGenericOfOutput": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Output",
              "nullable": true
            }
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseWithGenericOfRepository": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Repository",
              "nullable": true
            }
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseWithGenericOfRule": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Rule",
              "nullable": true
            }
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseWithGenericOfRuleRequiresJob": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RuleRequiresJob",
              "nullable": true
            }
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseWithGenericOfTask": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Task",
              "nullable": true
            }
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseWithGenericOfTrigger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Trigger",
              "nullable": true
            }
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseWithGenericOfTriggerHasExecution": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TriggerHasExecution",
              "nullable": true
            }
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Rule": {
        "type": "object",
        "properties": {
          "branch_name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "referenced_by_job_rule_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Job",
              "nullable": true
            }
          },
          "referenced_by_rule_requires_job_rule_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RuleRequiresJob",
              "nullable": true
            }
          },
          "referenced_by_trigger_rule_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Trigger",
              "nullable": true
            }
          },
          "repository_id": {
            "type": "string",
            "format": "uuid"
          },
          "repository_id_object": {
            "$ref": "#/components/schemas/Repository",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RuleRequiresJob": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "job_id": {
            "type": "string",
            "format": "uuid"
          },
          "job_id_object": {
            "$ref": "#/components/schemas/Job",
            "nullable": true
          },
          "rule_id": {
            "type": "string",
            "format": "uuid"
          },
          "rule_id_object": {
            "$ref": "#/components/schemas/Rule",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "image": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "referenced_by_job_build_task_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Job",
              "nullable": true
            }
          },
          "referenced_by_job_deploy_task_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Job",
              "nullable": true
            }
          },
          "referenced_by_job_publish_task_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Job",
              "nullable": true
            }
          },
          "referenced_by_job_test_task_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Job",
              "nullable": true
            }
          },
          "referenced_by_job_validate_task_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Job",
              "nullable": true
            }
          },
          "referenced_by_output_task_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Output",
              "nullable": true
            }
          },
          "script": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Trigger": {
        "type": "object",
        "properties": {
          "change_id": {
            "type": "string",
            "format": "uuid"
          },
          "change_id_object": {
            "$ref": "#/components/schemas/Change",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "job_execution_started_at": {
            "type": "string",
            "format": "date-time"
          },
          "job_executor_claimed_until": {
            "type": "string",
            "format": "date-time"
          },
          "referenced_by_execution_trigger_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Execution",
              "nullable": true
            }
          },
          "referenced_by_trigger_has_execution_trigger_id_objects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TriggerHasExecution",
              "nullable": true
            }
          },
          "rule_id": {
            "type": "string",
            "format": "uuid"
          },
          "rule_id_object": {
            "$ref": "#/components/schemas/Rule",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TriggerHasExecution": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "execution_id": {
            "type": "string",
            "format": "uuid"
          },
          "execution_id_object": {
            "$ref": "#/components/schemas/Execution",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "trigger_id": {
            "type": "string",
            "format": "uuid"
          },
          "trigger_id_object": {
            "$ref": "#/components/schemas/Trigger",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "paths": {
    "/api/changes": {
      "get": {
        "tags": [
          "Change"
        ],
        "operationId": "GetChanges",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL LIMIT operator"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL OFFSET operator"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Max recursion depth for loading foreign objects; default = 1\n\n(0 = recurse until graph cycle detected, 1 = this object only, 2 = this object + neighbours, 3 = this object + neighbours + their neighbours... etc)"
          },
          {
            "name": "id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "created_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "created_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "updated_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "updated_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deleted_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deleted_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "branch_name__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "branch_name__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "branch_name__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "branch_name__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "branch_name__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "branch_name__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "branch_name__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "branch_name__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "branch_name__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "branch_name__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "branch_name__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "branch_name__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "branch_name__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "branch_name__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "commit_hash__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "commit_hash__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "commit_hash__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "commit_hash__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "commit_hash__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "commit_hash__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "commit_hash__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "commit_hash__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "commit_hash__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "commit_hash__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "commit_hash__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "commit_hash__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "commit_hash__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "commit_hash__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "message__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "message__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "message__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "message__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "message__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "message__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "message__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "message__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "message__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "message__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "message__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "message__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "message__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "message__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "authored_by__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "authored_by__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "authored_by__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "authored_by__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "authored_by__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "authored_by__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "authored_by__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "authored_by__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "authored_by__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "authored_by__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "authored_by__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "authored_by__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "authored_by__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "authored_by__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "authored_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "authored_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "authored_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "authored_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "authored_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "authored_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "authored_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "authored_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "authored_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "authored_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "authored_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "authored_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "authored_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "authored_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "committed_by__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "committed_by__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "committed_by__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "committed_by__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "committed_by__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "committed_by__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "committed_by__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "committed_by__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "committed_by__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "committed_by__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "committed_by__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "committed_by__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "committed_by__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "committed_by__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "committed_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "committed_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "committed_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "committed_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "committed_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "committed_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "committed_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "committed_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "committed_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "committed_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "committed_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "committed_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "committed_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "committed_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "trigger_produced_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "trigger_produced_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "trigger_produced_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "trigger_produced_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "trigger_produced_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "trigger_produced_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "trigger_produced_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "trigger_produced_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "trigger_produced_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_produced_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_produced_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_produced_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_produced_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "trigger_produced_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "repository_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "repository_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "repository_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "repository_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "repository_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "repository_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "repository_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "repository_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "repository_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "repository_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "repository_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "repository_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "repository_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "repository_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "repository_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "repository_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_trigger_change_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_trigger_change_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          }
        ],
        "responses": {
          "200": {
            "description": "GetChanges success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfChange"
                }
              }
            }
          },
          "default": {
            "description": "GetChanges failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Change"
        ],
        "operationId": "PostChanges",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrayOfNullableChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PostChanges success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfChange"
                }
              }
            }
          },
          "default": {
            "description": "PostChanges failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/changes/{primaryKey}": {
      "get": {
        "tags": [
          "Change"
        ],
        "operationId": "GetChange",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "200": {
            "description": "GetChange success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfChange"
                }
              }
            }
          },
          "default": {
            "description": "GetChange failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Change"
        ],
        "operationId": "PatchChange",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Change"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchChange success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfChange"
                }
              }
            }
          },
          "default": {
            "description": "PatchChange failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Change"
        ],
        "operationId": "DeleteChange",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteChange success"
          },
          "default": {
            "description": "DeleteChange failure"
          }
        }
      }
    },
    "/api/custom/claim-trigger-for-job-executor": {
      "patch": {
        "tags": [
          "Custom"
        ],
        "operationId": "PatchCustomClaimTriggerForJobExecutor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchCustomClaimTriggerForJobExecutor success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NullableTrigger"
                }
              }
            }
          },
          "default": {
            "description": "PatchCustomClaimTriggerForJobExecutor failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/executions": {
      "get": {
        "tags": [
          "Execution"
        ],
        "operationId": "GetExecutions",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL LIMIT operator"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL OFFSET operator"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Max recursion depth for loading foreign objects; default = 1\n\n(0 = recurse until graph cycle detected, 1 = this object only, 2 = this object + neighbours, 3 = this object + neighbours + their neighbours... etc)"
          },
          {
            "name": "id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "created_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "created_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "updated_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "updated_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deleted_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deleted_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "status__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "status__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "status__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "status__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "status__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "status__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "status__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "status__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "status__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "status__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "status__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "status__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "status__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "status__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "trigger_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "trigger_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "trigger_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "trigger_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "trigger_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "trigger_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "trigger_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "trigger_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "trigger_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "trigger_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "trigger_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "trigger_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "build_output_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "build_output_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "build_output_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "build_output_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "build_output_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "build_output_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "build_output_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "build_output_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "build_output_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "build_output_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "build_output_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "build_output_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "build_output_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "build_output_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "build_output_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "build_output_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "test_output_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "test_output_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "test_output_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "test_output_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "test_output_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "test_output_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "test_output_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "test_output_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "test_output_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "test_output_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "test_output_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "test_output_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "test_output_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "test_output_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "test_output_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "test_output_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "publish_output_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "publish_output_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "publish_output_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "publish_output_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "publish_output_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "publish_output_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "publish_output_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "publish_output_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "publish_output_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "publish_output_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "publish_output_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "publish_output_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "publish_output_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "publish_output_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "publish_output_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "publish_output_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deploy_output_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deploy_output_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deploy_output_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deploy_output_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deploy_output_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deploy_output_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deploy_output_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deploy_output_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deploy_output_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deploy_output_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deploy_output_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deploy_output_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deploy_output_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deploy_output_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deploy_output_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deploy_output_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "validate_output_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "validate_output_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "validate_output_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "validate_output_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "validate_output_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "validate_output_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "validate_output_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "validate_output_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "validate_output_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "validate_output_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "validate_output_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "validate_output_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "validate_output_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "validate_output_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "validate_output_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "validate_output_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "job_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "job_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "job_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "job_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "job_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "job_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "job_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "job_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_trigger_has_execution_execution_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_trigger_has_execution_execution_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          }
        ],
        "responses": {
          "200": {
            "description": "GetExecutions success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfExecution"
                }
              }
            }
          },
          "default": {
            "description": "GetExecutions failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Execution"
        ],
        "operationId": "PostExecutions",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrayOfNullableExecution"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PostExecutions success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfExecution"
                }
              }
            }
          },
          "default": {
            "description": "PostExecutions failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/executions/{primaryKey}": {
      "get": {
        "tags": [
          "Execution"
        ],
        "operationId": "GetExecution",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "200": {
            "description": "GetExecution success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfExecution"
                }
              }
            }
          },
          "default": {
            "description": "GetExecution failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Execution"
        ],
        "operationId": "PatchExecution",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Execution"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchExecution success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfExecution"
                }
              }
            }
          },
          "default": {
            "description": "PatchExecution failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Execution"
        ],
        "operationId": "DeleteExecution",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteExecution success"
          },
          "default": {
            "description": "DeleteExecution failure"
          }
        }
      }
    },
    "/api/jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "operationId": "GetJobs",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL LIMIT operator"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL OFFSET operator"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Max recursion depth for loading foreign objects; default = 1\n\n(0 = recurse until graph cycle detected, 1 = this object only, 2 = this object + neighbours, 3 = this object + neighbours + their neighbours... etc)"
          },
          {
            "name": "id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "created_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "created_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "updated_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "updated_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deleted_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deleted_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "name__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "name__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "name__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "name__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "name__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "name__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "name__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "name__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "name__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "name__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "name__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "name__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "name__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "name__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_executor_claimed_until__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "job_executor_claimed_until__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "job_executor_claimed_until__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "job_executor_claimed_until__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "job_executor_claimed_until__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "job_executor_claimed_until__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "job_executor_claimed_until__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "job_executor_claimed_until__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "job_executor_claimed_until__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_executor_claimed_until__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_executor_claimed_until__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_executor_claimed_until__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_executor_claimed_until__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_executor_claimed_until__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "rule_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "rule_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "rule_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "rule_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "rule_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "rule_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "rule_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "rule_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "build_task_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "build_task_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "build_task_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "build_task_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "build_task_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "build_task_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "build_task_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "build_task_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "build_task_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "build_task_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "build_task_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "build_task_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "build_task_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "build_task_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "build_task_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "build_task_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "test_task_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "test_task_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "test_task_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "test_task_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "test_task_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "test_task_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "test_task_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "test_task_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "test_task_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "test_task_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "test_task_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "test_task_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "test_task_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "test_task_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "test_task_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "test_task_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "publish_task_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "publish_task_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "publish_task_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "publish_task_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "publish_task_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "publish_task_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "publish_task_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "publish_task_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "publish_task_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "publish_task_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "publish_task_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "publish_task_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "publish_task_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "publish_task_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "publish_task_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "publish_task_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deploy_task_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deploy_task_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deploy_task_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deploy_task_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deploy_task_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deploy_task_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deploy_task_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deploy_task_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deploy_task_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deploy_task_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deploy_task_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deploy_task_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deploy_task_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deploy_task_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deploy_task_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deploy_task_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "validate_task_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "validate_task_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "validate_task_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "validate_task_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "validate_task_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "validate_task_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "validate_task_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "validate_task_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "validate_task_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "validate_task_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "validate_task_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "validate_task_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "validate_task_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "validate_task_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "validate_task_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "validate_task_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_rule_requires_job_job_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_rule_requires_job_job_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_job_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_job_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          }
        ],
        "responses": {
          "200": {
            "description": "GetJobs success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfJob"
                }
              }
            }
          },
          "default": {
            "description": "GetJobs failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job"
        ],
        "operationId": "PostJobs",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrayOfNullableJob"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PostJobs success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfJob"
                }
              }
            }
          },
          "default": {
            "description": "PostJobs failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/{primaryKey}": {
      "get": {
        "tags": [
          "Job"
        ],
        "operationId": "GetJob",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "200": {
            "description": "GetJob success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfJob"
                }
              }
            }
          },
          "default": {
            "description": "GetJob failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Job"
        ],
        "operationId": "PatchJob",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Job"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchJob success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfJob"
                }
              }
            }
          },
          "default": {
            "description": "PatchJob failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "operationId": "DeleteJob",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteJob success"
          },
          "default": {
            "description": "DeleteJob failure"
          }
        }
      }
    },
    "/api/outputs": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "GetOutputs",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL LIMIT operator"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL OFFSET operator"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Max recursion depth for loading foreign objects; default = 1\n\n(0 = recurse until graph cycle detected, 1 = this object only, 2 = this object + neighbours, 3 = this object + neighbours + their neighbours... etc)"
          },
          {
            "name": "id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "created_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "created_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "updated_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "updated_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deleted_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deleted_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "status__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "status__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "status__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "status__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "status__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "status__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "status__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "status__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "status__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "status__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "status__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "status__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "status__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "status__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "exit_status__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "exit_status__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "exit_status__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "exit_status__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "exit_status__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "exit_status__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "exit_status__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "exit_status__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "exit_status__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "exit_status__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "buffer__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "buffer__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "buffer__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "buffer__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "buffer__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "buffer__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "buffer__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "buffer__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "buffer__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "buffer__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "buffer__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "buffer__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "buffer__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "buffer__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "error__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "error__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "error__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "error__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "error__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "error__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "error__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "error__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "error__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "error__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "error__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "error__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "error__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "error__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "task_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "task_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "task_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "task_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "task_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "task_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "task_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "task_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "task_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "task_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "task_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "task_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "task_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "task_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "task_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "task_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_build_output_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_build_output_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_test_output_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_test_output_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_publish_output_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_publish_output_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_deploy_output_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_deploy_output_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_validate_output_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_validate_output_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          }
        ],
        "responses": {
          "200": {
            "description": "GetOutputs success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfOutput"
                }
              }
            }
          },
          "default": {
            "description": "GetOutputs failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Output"
        ],
        "operationId": "PostOutputs",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrayOfNullableOutput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PostOutputs success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfOutput"
                }
              }
            }
          },
          "default": {
            "description": "PostOutputs failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/outputs/{primaryKey}": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "GetOutput",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "200": {
            "description": "GetOutput success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfOutput"
                }
              }
            }
          },
          "default": {
            "description": "GetOutput failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Output"
        ],
        "operationId": "PatchOutput",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Output"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchOutput success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfOutput"
                }
              }
            }
          },
          "default": {
            "description": "PatchOutput failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Output"
        ],
        "operationId": "DeleteOutput",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteOutput success"
          },
          "default": {
            "description": "DeleteOutput failure"
          }
        }
      }
    },
    "/api/repositories": {
      "get": {
        "tags": [
          "Repository"
        ],
        "operationId": "GetRepositories",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL LIMIT operator"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL OFFSET operator"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Max recursion depth for loading foreign objects; default = 1\n\n(0 = recurse until graph cycle detected, 1 = this object only, 2 = this object + neighbours, 3 = this object + neighbours + their neighbours... etc)"
          },
          {
            "name": "id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "created_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "created_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "updated_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "updated_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deleted_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deleted_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "last_synced__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "last_synced__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "last_synced__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "last_synced__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "last_synced__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "last_synced__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "last_synced__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "last_synced__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "last_synced__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "last_synced__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "last_synced__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "last_synced__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "last_synced__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "last_synced__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "url__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "url__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "url__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "url__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "url__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "url__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "url__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "url__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "url__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "url__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "url__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "url__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "url__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "url__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "username__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "username__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "username__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "username__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "username__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "username__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "username__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "username__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "username__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "username__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "username__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "username__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "username__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "username__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "password__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "password__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "password__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "password__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "password__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "password__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "password__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "password__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "password__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "password__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "password__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "password__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "password__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "password__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "ssh_key__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "ssh_key__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "ssh_key__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "ssh_key__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "ssh_key__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "ssh_key__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "ssh_key__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "ssh_key__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "ssh_key__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "ssh_key__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "ssh_key__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "ssh_key__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "ssh_key__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "ssh_key__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_rule_repository_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_rule_repository_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_change_repository_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_change_repository_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          }
        ],
        "responses": {
          "200": {
            "description": "GetRepositories success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRepository"
                }
              }
            }
          },
          "default": {
            "description": "GetRepositories failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Repository"
        ],
        "operationId": "PostRepositories",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrayOfNullableRepository"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PostRepositories success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRepository"
                }
              }
            }
          },
          "default": {
            "description": "PostRepositories failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/{primaryKey}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "operationId": "GetRepository",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "200": {
            "description": "GetRepository success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRepository"
                }
              }
            }
          },
          "default": {
            "description": "GetRepository failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Repository"
        ],
        "operationId": "PatchRepository",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Repository"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchRepository success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRepository"
                }
              }
            }
          },
          "default": {
            "description": "PatchRepository failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Repository"
        ],
        "operationId": "DeleteRepository",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteRepository success"
          },
          "default": {
            "description": "DeleteRepository failure"
          }
        }
      }
    },
    "/api/rule-requires-jobs": {
      "get": {
        "tags": [
          "RuleRequiresJob"
        ],
        "operationId": "GetRuleRequiresJobs",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL LIMIT operator"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL OFFSET operator"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Max recursion depth for loading foreign objects; default = 1\n\n(0 = recurse until graph cycle detected, 1 = this object only, 2 = this object + neighbours, 3 = this object + neighbours + their neighbours... etc)"
          },
          {
            "name": "id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "created_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "created_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "updated_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "updated_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deleted_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deleted_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "rule_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "rule_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "rule_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "rule_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "rule_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "rule_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "rule_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "rule_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "job_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "job_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "job_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "job_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "job_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "job_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "job_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "job_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          }
        ],
        "responses": {
          "200": {
            "description": "GetRuleRequiresJobs success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRuleRequiresJob"
                }
              }
            }
          },
          "default": {
            "description": "GetRuleRequiresJobs failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RuleRequiresJob"
        ],
        "operationId": "PostRuleRequiresJobs",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrayOfNullableRuleRequiresJob"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PostRuleRequiresJobs success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRuleRequiresJob"
                }
              }
            }
          },
          "default": {
            "description": "PostRuleRequiresJobs failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/rule-requires-jobs/{primaryKey}": {
      "get": {
        "tags": [
          "RuleRequiresJob"
        ],
        "operationId": "GetRuleRequiresJob",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "200": {
            "description": "GetRuleRequiresJob success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRuleRequiresJob"
                }
              }
            }
          },
          "default": {
            "description": "GetRuleRequiresJob failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RuleRequiresJob"
        ],
        "operationId": "PatchRuleRequiresJob",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleRequiresJob"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchRuleRequiresJob success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRuleRequiresJob"
                }
              }
            }
          },
          "default": {
            "description": "PatchRuleRequiresJob failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RuleRequiresJob"
        ],
        "operationId": "DeleteRuleRequiresJob",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteRuleRequiresJob success"
          },
          "default": {
            "description": "DeleteRuleRequiresJob failure"
          }
        }
      }
    },
    "/api/rules": {
      "get": {
        "tags": [
          "Rule"
        ],
        "operationId": "GetRules",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL LIMIT operator"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL OFFSET operator"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Max recursion depth for loading foreign objects; default = 1\n\n(0 = recurse until graph cycle detected, 1 = this object only, 2 = this object + neighbours, 3 = this object + neighbours + their neighbours... etc)"
          },
          {
            "name": "id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "created_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "created_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "updated_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "updated_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deleted_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deleted_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "branch_name__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "branch_name__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "branch_name__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "branch_name__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "branch_name__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "branch_name__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "branch_name__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "branch_name__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "branch_name__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "branch_name__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "branch_name__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "branch_name__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "branch_name__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "branch_name__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "repository_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "repository_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "repository_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "repository_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "repository_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "repository_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "repository_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "repository_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "repository_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "repository_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "repository_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "repository_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "repository_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "repository_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "repository_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "repository_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_rule_requires_job_rule_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_rule_requires_job_rule_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_trigger_rule_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_trigger_rule_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_rule_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_rule_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          }
        ],
        "responses": {
          "200": {
            "description": "GetRules success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRule"
                }
              }
            }
          },
          "default": {
            "description": "GetRules failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Rule"
        ],
        "operationId": "PostRules",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrayOfNullableRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PostRules success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRule"
                }
              }
            }
          },
          "default": {
            "description": "PostRules failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/rules/{primaryKey}": {
      "get": {
        "tags": [
          "Rule"
        ],
        "operationId": "GetRule",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "200": {
            "description": "GetRule success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRule"
                }
              }
            }
          },
          "default": {
            "description": "GetRule failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Rule"
        ],
        "operationId": "PatchRule",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchRule success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfRule"
                }
              }
            }
          },
          "default": {
            "description": "PatchRule failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Rule"
        ],
        "operationId": "DeleteRule",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteRule success"
          },
          "default": {
            "description": "DeleteRule failure"
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "GetTasks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL LIMIT operator"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL OFFSET operator"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Max recursion depth for loading foreign objects; default = 1\n\n(0 = recurse until graph cycle detected, 1 = this object only, 2 = this object + neighbours, 3 = this object + neighbours + their neighbours... etc)"
          },
          {
            "name": "id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "created_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "created_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "updated_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "updated_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deleted_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deleted_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "name__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "name__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "name__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "name__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "name__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "name__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "name__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "name__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "name__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "name__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "name__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "name__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "name__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "name__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "platform__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "platform__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "platform__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "platform__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "platform__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "platform__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "platform__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "platform__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "platform__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "platform__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "platform__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "platform__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "platform__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "platform__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "image__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "image__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "image__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "image__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "image__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "image__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "image__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "image__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "image__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "image__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "image__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "image__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "image__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "image__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "script__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "script__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "script__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "script__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "script__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "script__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "script__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "script__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "script__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "script__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "script__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "script__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "script__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "script__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_output_task_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_output_task_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_build_task_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_build_task_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_test_task_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_test_task_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_publish_task_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_publish_task_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_deploy_task_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_deploy_task_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_validate_task_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_job_validate_task_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          }
        ],
        "responses": {
          "200": {
            "description": "GetTasks success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTask"
                }
              }
            }
          },
          "default": {
            "description": "GetTasks failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task"
        ],
        "operationId": "PostTasks",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrayOfNullableTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PostTasks success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTask"
                }
              }
            }
          },
          "default": {
            "description": "PostTasks failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{primaryKey}": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "GetTask",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "200": {
            "description": "GetTask success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTask"
                }
              }
            }
          },
          "default": {
            "description": "GetTask failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Task"
        ],
        "operationId": "PatchTask",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchTask success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTask"
                }
              }
            }
          },
          "default": {
            "description": "PatchTask failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "operationId": "DeleteTask",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteTask success"
          },
          "default": {
            "description": "DeleteTask failure"
          }
        }
      }
    },
    "/api/trigger-has-executions": {
      "get": {
        "tags": [
          "TriggerHasExecution"
        ],
        "operationId": "GetTriggerHasExecutions",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL LIMIT operator"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL OFFSET operator"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Max recursion depth for loading foreign objects; default = 1\n\n(0 = recurse until graph cycle detected, 1 = this object only, 2 = this object + neighbours, 3 = this object + neighbours + their neighbours... etc)"
          },
          {
            "name": "id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "created_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "created_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "updated_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "updated_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deleted_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deleted_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "trigger_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "trigger_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "trigger_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "trigger_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "trigger_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "trigger_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "trigger_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "trigger_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "trigger_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "trigger_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "trigger_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "trigger_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "trigger_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "execution_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "execution_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "execution_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "execution_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "execution_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "execution_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "execution_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "execution_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "execution_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "execution_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "execution_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "execution_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "execution_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "execution_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "execution_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "execution_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          }
        ],
        "responses": {
          "200": {
            "description": "GetTriggerHasExecutions success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTriggerHasExecution"
                }
              }
            }
          },
          "default": {
            "description": "GetTriggerHasExecutions failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TriggerHasExecution"
        ],
        "operationId": "PostTriggerHasExecutions",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrayOfNullableTriggerHasExecution"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PostTriggerHasExecutions success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTriggerHasExecution"
                }
              }
            }
          },
          "default": {
            "description": "PostTriggerHasExecutions failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/trigger-has-executions/{primaryKey}": {
      "get": {
        "tags": [
          "TriggerHasExecution"
        ],
        "operationId": "GetTriggerHasExecution",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "200": {
            "description": "GetTriggerHasExecution success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTriggerHasExecution"
                }
              }
            }
          },
          "default": {
            "description": "GetTriggerHasExecution failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TriggerHasExecution"
        ],
        "operationId": "PatchTriggerHasExecution",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerHasExecution"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchTriggerHasExecution success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTriggerHasExecution"
                }
              }
            }
          },
          "default": {
            "description": "PatchTriggerHasExecution failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TriggerHasExecution"
        ],
        "operationId": "DeleteTriggerHasExecution",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteTriggerHasExecution success"
          },
          "default": {
            "description": "DeleteTriggerHasExecution failure"
          }
        }
      }
    },
    "/api/triggers": {
      "get": {
        "tags": [
          "Trigger"
        ],
        "operationId": "GetTriggers",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL LIMIT operator"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SQL OFFSET operator"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Max recursion depth for loading foreign objects; default = 1\n\n(0 = recurse until graph cycle detected, 1 = this object only, 2 = this object + neighbours, 3 = this object + neighbours + their neighbours... etc)"
          },
          {
            "name": "id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "created_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "created_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "created_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "created_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "created_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "updated_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "updated_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "updated_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "updated_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "updated_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "updated_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "deleted_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "deleted_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "deleted_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "deleted_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "deleted_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "deleted_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_executor_claimed_until__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "job_executor_claimed_until__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "job_executor_claimed_until__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "job_executor_claimed_until__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "job_executor_claimed_until__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "job_executor_claimed_until__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "job_executor_claimed_until__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "job_executor_claimed_until__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "job_executor_claimed_until__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_executor_claimed_until__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_executor_claimed_until__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_executor_claimed_until__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_executor_claimed_until__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_executor_claimed_until__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_execution_started_at__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "job_execution_started_at__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "job_execution_started_at__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "job_execution_started_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "job_execution_started_at__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "job_execution_started_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "job_execution_started_at__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "job_execution_started_at__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "job_execution_started_at__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_execution_started_at__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_execution_started_at__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_execution_started_at__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "job_execution_started_at__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "job_execution_started_at__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "rule_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "rule_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "rule_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "rule_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "rule_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "rule_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "rule_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "rule_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "rule_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "rule_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "change_id__eq",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL = comparison"
          },
          {
            "name": "change_id__ne",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL != comparison"
          },
          {
            "name": "change_id__gt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e comparison, may not work with all column types"
          },
          {
            "name": "change_id__gte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003e= comparison, may not work with all column types"
          },
          {
            "name": "change_id__lt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c comparison, may not work with all column types"
          },
          {
            "name": "change_id__lte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL \u003c= comparison, may not work with all column types"
          },
          {
            "name": "change_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL IN comparison, permits comma-separated values"
          },
          {
            "name": "change_id__notin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT IN comparison, permits comma-separated values"
          },
          {
            "name": "change_id__like",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "change_id__notlike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT LIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "change_id__ilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "change_id__notilike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "SQL NOT ILIKE comparison, value is implicitly prefixed and suffixed with %"
          },
          {
            "name": "change_id__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "change_id__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "change_id_object__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "change_id_object__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_trigger_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_execution_trigger_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_trigger_has_execution_trigger_id_objects__desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ DESC clause, value is ignored (presence of key is sufficient)"
          },
          {
            "name": "referenced_by_trigger_has_execution_trigger_id_objects__asc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "SQL ORDER BY _ ASC clause, value is ignored (presence of key is sufficient)"
          }
        ],
        "responses": {
          "200": {
            "description": "GetTriggers success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTrigger"
                }
              }
            }
          },
          "default": {
            "description": "GetTriggers failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Trigger"
        ],
        "operationId": "PostTriggers",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrayOfNullableTrigger"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "PostTriggers success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTrigger"
                }
              }
            }
          },
          "default": {
            "description": "PostTriggers failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/triggers/{primaryKey}": {
      "get": {
        "tags": [
          "Trigger"
        ],
        "operationId": "GetTrigger",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "200": {
            "description": "GetTrigger success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTrigger"
                }
              }
            }
          },
          "default": {
            "description": "GetTrigger failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Trigger"
        ],
        "operationId": "PatchTrigger",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Trigger"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PatchTrigger success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithGenericOfTrigger"
                }
              }
            }
          },
          "default": {
            "description": "PatchTrigger failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status",
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Trigger"
        ],
        "operationId": "DeleteTrigger",
        "parameters": [
          {
            "name": "primaryKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Path parameter primaryKey"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Query parameter depth"
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteTrigger success"
          },
          "default": {
            "description": "DeleteTrigger failure"
          }
        }
      }
    }
  }
}